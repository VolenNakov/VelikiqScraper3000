name: Go Build and Deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: self-hosted
    env:
      DB_FILE: ${{ secrets.DATABASE_URL }}
      APP_PORT: ${{ secrets.APP_PORT }}
      APP_FOLDER: ${{ secrets.APP_FOLDER }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Stop existing service
        run: sudo systemctl stop scraper.service || true
        continue-on-error: true

      - uses: actions/checkout@v4

      - name: Run migrations
        working-directory: ./internal/db/migrations
        run: goose sqlite3 ${{ env.APP_FOLDER }}/${{ env.DB_FILE }} up

      - name: Install dependencies
        run: /usr/local/go/bin/go mod download

      - name: Build
        env:
          CC: aarch64-linux-gnu-gcc
          GOOS: linux
          GOARCH: arm64
          CGO_ENABLED: 1
        run: /usr/local/go/bin/go build -v -o server ./cmd/api/main.go

      - name: Copy executable to app_folder
        run: |
          chmod +x server
          cp server ${{ env.APP_FOLDER }}

      - name: Restart Service
        run: sudo systemctl restart scraper

      - name: Verify deployment
        run: |
          sleep 30
          sudo systemctl status scraper.service
